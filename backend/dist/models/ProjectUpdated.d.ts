import { Model, Optional } from 'sequelize';
export interface ProjectAttributes {
    id: number;
    projectCode: string;
    projectName: string;
    projectType: string;
    projectStatus: string;
    owner: string;
    ownerId?: number;
    groupId?: number;
    members: string;
    projectGoal: string;
    projectBackground: string;
    projectExplanation: string;
    procurementCode: string;
    completionStatus: string;
    relatedBudgetProject: string;
    budgetYear: string;
    budgetOccupied: number;
    budgetExecuted: number;
    remainingBudget: number;
    orderAmount: number;
    acceptanceAmount: number;
    contractOrderNumber?: string;
    expectedAcceptanceTime?: Date;
    septemberActualExecution?: string;
    octoberPlan?: string;
    novemberPlan?: string;
    decemberPlan?: string;
    septemberActual?: number;
    octoberActual?: number;
    novemberActual?: number;
    decemberActual?: number;
    riskLevel?: 'low' | 'medium' | 'high' | 'critical';
    priority?: 'low' | 'medium' | 'high' | 'urgent';
    approvalStatus: 'draft' | 'pending' | 'approved' | 'rejected';
    submittedBy?: number;
    approvedBy?: number;
    approvedAt?: Date;
    rejectionReason?: string;
    category?: string;
    subProjectName?: string;
    budgetAmount?: number;
    content?: string;
    createdAt: Date;
    updatedAt: Date;
}
export interface ProjectCreationAttributes extends Optional<ProjectAttributes, 'id' | 'ownerId' | 'groupId' | 'contractOrderNumber' | 'expectedAcceptanceTime' | 'septemberActualExecution' | 'octoberPlan' | 'novemberPlan' | 'decemberPlan' | 'septemberActual' | 'octoberActual' | 'novemberActual' | 'decemberActual' | 'riskLevel' | 'priority' | 'submittedBy' | 'approvedBy' | 'approvedAt' | 'rejectionReason' | 'category' | 'subProjectName' | 'budgetAmount' | 'content' | 'createdAt' | 'updatedAt'> {
}
export declare class Project extends Model<ProjectAttributes, ProjectCreationAttributes> implements ProjectAttributes {
    id: number;
    projectCode: string;
    projectName: string;
    projectType: string;
    projectStatus: string;
    owner: string;
    ownerId?: number;
    groupId?: number;
    members: string;
    projectGoal: string;
    projectBackground: string;
    projectExplanation: string;
    procurementCode: string;
    completionStatus: string;
    relatedBudgetProject: string;
    budgetYear: string;
    budgetOccupied: number;
    budgetExecuted: number;
    remainingBudget: number;
    orderAmount: number;
    acceptanceAmount: number;
    contractOrderNumber?: string;
    expectedAcceptanceTime?: Date;
    septemberActualExecution?: string;
    octoberPlan?: string;
    novemberPlan?: string;
    decemberPlan?: string;
    septemberActual?: number;
    octoberActual?: number;
    novemberActual?: number;
    decemberActual?: number;
    riskLevel?: 'low' | 'medium' | 'high' | 'critical';
    priority?: 'low' | 'medium' | 'high' | 'urgent';
    approvalStatus: 'draft' | 'pending' | 'approved' | 'rejected';
    submittedBy?: number;
    approvedBy?: number;
    approvedAt?: Date;
    rejectionReason?: string;
    category?: string;
    subProjectName?: string;
    budgetAmount?: number;
    content?: string;
    readonly createdAt: Date;
    readonly updatedAt: Date;
}
export default Project;
//# sourceMappingURL=ProjectUpdated.d.ts.map